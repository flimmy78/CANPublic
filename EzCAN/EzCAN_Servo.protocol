#ifndef EZCAN_SERVO_MOTO_START_TOK
#ifndef EZCAN_SERVO_MOTO_TOK
#ifndef EZCAN_SERVO_MOTO_RANGE
#ifndef EZCAN_SERVO_MOTO_INIT
#ifndef EZCAN_SERVO_OTHERS_START_TOK
#ifndef EZCAN_SERVO_OTHERS_TOK
#ifndef EZCAN_SERVO_OTHERS_RANGE
#ifndef EZCAN_SERVO_OTHERS_INIT
#ifndef EZCAN_SERVO_CONTROL_START_TOK
#ifndef EZCAN_SERVO_CONTROL_TOK
#ifndef EZCAN_SERVO_CONTROL_RANGE
#ifndef EZCAN_SERVO_CONTROL_INIT
#ifndef EZCAN_SERVO_STATUS_START_TOK
#ifndef EZCAN_SERVO_STATUS_TOK
#ifndef EZCAN_SERVO_STATUS_RANGE
#ifndef EZCAN_SERVO_STATUS_INIT
	#error "You must define XX_TOK macro before include this file"
#endif
#endif
#endif
#endif

#endif
#endif
#endif
#endif

#endif
#endif
#endif
#endif

#endif
#endif
#endif
#endif

#ifdef EZCAN_SERVO_MOTO_START_TOK
EZCAN_SERVO_MOTO_START_TOK(SERVO_MOTO_POSITIVEDIR, 256, s8, PositiveDir, RW, &PositiveDirRange, EzCANMotoPositiveDirHandler, SMPDIR)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S8Range, PositiveDirRange, VALIST(-1,1))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PositiveDir, S8, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_INITLOOPMODE, u8, InitLoopMode, RW, &InitLoopModeRange, U8Handler, SMINITLOOP)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, InitLoopModeRange, VALIST(0,7))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(InitLoopMode, U8, OPEN_LOOP)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_RUNTIMECALI, u8, RuntimeCali, RW, &RuntimeCaliRange, U8Handler, SMRCALI)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, RuntimeCaliRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_INERTIA, u32, Inertia, RW, &InertiaRange, U32Handler, SMINERTIA)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, InertiaRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ELECGEARNUMERATOR, u16, ElecGearNumerator, RW, &ElecGearNumeratorRange, U16Handler, SMEGN)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, ElecGearNumeratorRange, VALIST(1,65535))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(ElecGearNumerator, U16, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ELECGEARDENOMINATOR, u16, ElecGearDenominator, RW, &ElecGearDenominatorRange, U16Handler, SMEGD)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, ElecGearDenominatorRange, VALIST(1,65535))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(ElecGearDenominator, U16, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PLUSOUTDIV, u32, PlusOutDiv, RW, NULL, U32Handler, SMPDIV)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSOVERDIFF, u32, PosOverDiff, RW, &PosOverDiffRange, U32Handler, SMPOD)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, PosOverDiffRange, VALIST(0,134217728))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PosOverDiff, U32, 10000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSKP, u32, PosKp, RW, NULL, EzCANMotoPosPIHandler, SMPOSKP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PosKp, U32, 4000000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSKI, u32, PosKi, RW, NULL, EzCANMotoPosPIHandler, SMPOSKI)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PosKi, U32, 0)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDKP, u32, SpeedKp, RW, NULL, EzCANMotoSpeedPIHandler, SMSPDKP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedKp, U32, 20000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDKI, u32, SpeedKi, RW, NULL, EzCANMotoSpeedPIHandler, SMSPDKI)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedKi, U32, 1000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDFILTER, u16, SpeedFilter, RW, NULL, EzCANMotoSpeedFilterHandler, SMSPDFLT)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEFILTER, u16, TorqueFilter, RW, NULL, EzCANMotoTorqueFilterHandler, SMTRQFLT)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDKFF, u16, SpeedKff, RW, &SpeedKffRange, EzCANMotoSpeedKffHandler, SMSPDKFF)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, SpeedKffRange, VALIST(0,65535))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDKFFFILTER, u16, SpeedKffFilter, RW, &SpeedKffFilterRange, EzCANMotoSpeedKffFilterHandler, SPDKFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, SpeedKffFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEKFF, u16, TorqueKff, RW, &TorqueKffRange, EzCANMotoTorqueKffHandler, SMTRQKFF)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, TorqueKffRange, VALIST(0,65535))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEKFFFILTER, u16, TorqueKffFilter, RW, &TorqueKffFilterRange, EzCANMotoTorqueKffFilterHandler, SMTRQKFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, TorqueKffFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDFIRFILTER, u8, SpeedFIRFilter, RW, NULL, U8Handler, SMSPDFIRFLT)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedFIRFilter, U8, 6)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_FIRSTNOTCHFILTERFREQ, u16, FirstNotchFilterFreq, RW, NULL, U16Handler, SMFSTNFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_FIRSTNOTCHFILTERWIDTH, u16, FirstNotchFilterWidth, RW, NULL, U16Handler, SMFSTNWID)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_FIRSTNOTCHFILTERDEPTH, u16, FirstNotchFilterDepth, RW, NULL, U16Handler, SMFSTNDEP)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SECONDNOTCHFILTERFREQ, u16, SecondNotchFilterFreq, RW, NULL, U16Handler, SMSCDNFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SECONDNOTCHFILTERWIDTH, u16, SecondNotchFilterWidth, RW, NULL, U16Handler, SMSCDNWID)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SECONDNOTCHFILTERDEPTH, u16, SecondNotchFilterDepth, RW, NULL, U16Handler, SMSCDNDEP)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSCMDSMOOTH, u16, PosCmdSmooth, RW, &PosCmdSmoothRange, EzCANMotoPosCmdSmoothHandler, SMPCMDSMTH)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, PosCmdSmoothRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSCMDFIR, u16, PosCmdFIR, RW, &PosCmdFIRRange, EzCANMotoPosCmdFIRHandler, SMPCMDFIR)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, PosCmdFIRRange, VALIST(0,10))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDCMDGAIN, u32, SpeedCmdGain, RW, NULL, U32Handler, SMSCMDGAIN)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedCmdGain, U32, 100000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDCMDDIR, u8, SpeedCmdDir, RW, &SpeedCmdDirRange, U8Handler, SMSCMDDIR)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, SpeedCmdDirRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDPOSITIVEACCTIME, u32, SpeedPositiveAccTime, RW, &SpeedPositiveAccTimeRange, EzCANMotoSpeedPositiveAccTimeHandler, SMSPACCT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, SpeedPositiveAccTimeRange, VALIST(0,30000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDNEGATIVEACCTIME, u32, SpeedNegativeAccTime, RW, &SpeedNegativeAccTimeRange, EzCANMotoSpeedNegativeAccTimeHandler, SMSNACCT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, SpeedNegativeAccTimeRange, VALIST(0,30000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDSTIME, u32, SpeedSTime, RW, &SpeedSTimeRange, U32Handler, SMSSACCT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, SpeedSTimeRange, VALIST(0,1000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDZEROLOCK, u8, SpeedZeroLock, RW, NULL, U8Handler, SMSZLK)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDZEROLEVEL, u32, SpeedZeroLevel, RW, NULL, U32Handler, SMSZLVL)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUECMDGAIN, u32, TorqueCmdGain, RW, NULL, U32Handler, SMTCMDGAIN)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueCmdGain, U32, 5000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUECMDDIR, u8, TorqueCmdDir, RW, NULL, U8Handler, SMTCMDDIR)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEMAXPOSITIVESPEED, u32, TorqueMaxPositiveSpeed, RW, NULL, U32Handler, SMTMAXPSPD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueMaxPositiveSpeed, U32, 60000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEMAXNEGATIVESPEED, u32, TorqueMaxNegativeSpeed, RW, NULL, U32Handler, SMTMAXNSPD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueMaxNegativeSpeed, U32, 60000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_LOCATERANGE, u32, LocateRange, RW, NULL, U32Handler, SMLOCRANG)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(LocateRange, U32, 5)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_LOCATEOP, u8, LocateOp, RW, &LocateOpRange, U8Handler, SMLOCOP)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, LocateOpRange, VALIST(0,2))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ZEROSPEED, u32, ZeroSpeed, RW, &ZeroSpeedRange, U32Handler, SMZROSPD)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, ZeroSpeedRange, VALIST(0,20000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDSAMERANGE, u32, SpeedSameRange, RW, &SpeedSameRangeRange, U32Handler, SMSSR)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, SpeedSameRangeRange, VALIST(10,20000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ATPOSSPEED, s32, AtPosSpeed, RW, NULL, S32Handler, SMASR)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_OVERLOADGATE, u32, OverLoadGate, RW, &OverLoadGateRange, U32Handler, SMOVRLODG)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, OverLoadGateRange, VALIST(1,500))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_OVERSPEEDGATE, u32, OverSpeedGate, RW, NULL, U32Handler, SMOVRSPDG)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(OverSpeedGate, U32, 500000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDOVERDIFF, u32, SpeedOverDiff, RW, NULL, U32Handler, SMSPDOD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedOverDiff, U32, 5000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MOTIONRANGE, s64, MotionRange, RW, &MotionRangeRange, S64Handler, SMMRANG)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S64Range, MotionRangeRange, VALIST(0,1000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PAIRNUM, u8, PairNum, RW, NULL, U8Handler, SMPNUM)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PairNum, U8, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_CTRLSIGN, u8, CtrlSign, RW, &CtrlSignRange, U8Handler, SMCS)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, CtrlSignRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(CtrlSign, U8, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MAXSPEED, s32, MaxSpeed, RW, NULL, EzCANMotoMaxSpeedHandler, SMMAXSPD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(MaxSpeed, S32, 400000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MAXTORQUE, s32, MaxTorque, RW, &MaxTorqueRange, EzCANMotoMaxTorqueHandler, SMMINSPD)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S32Range, MaxTorqueRange, VALIST(0,32767))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(MaxTorque, S32, 10000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MAXVOLQ, s16, MaxVolQ, RW, &MaxVolQRange, S16Handler, SMMAXVQ)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S16Range, MaxVolQRange, VALIST(0,32767))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MAXVOLD, s16, MaxVolD, RW, &MaxVolDRange, S16Handler, SMMAXVD)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S16Range, MaxVolDRange, VALIST(0,32767))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ENCODERGAPNUM, u32, EncoderGapNum, RW, &EncoderGapNumRange, EzCANMotoEncoderGapNumHandler, SMENCNUM)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U32Range, EncoderGapNumRange, VALIST(0,65536))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(EncoderGapNum, U32, 1000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUESTORESAMPLEFREQ, u32, TorqueStoreSampleFreq, RO, NULL, U32Handler, SMTRQSTRFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueStoreSampleFreq, U32, 20000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDSTORESAMPLEFREQ, u32, SpeedStoreSampleFreq, RO, NULL, U32Handler, SMSPDSTRFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedStoreSampleFreq, U32, 2000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSSTORESAMPLEFREQ, u32, PosStoreSampleFreq, RO, NULL, U32Handler, SMPOSSTRFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PosStoreSampleFreq, U32, 1000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEPERFORMFREQ, u32, TorquePerformFreq, RW, NULL, U32Handler, SMTRQPERFFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorquePerformFreq, U32, 1000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEPERFORMAMPLITUDE, s32, TorquePerformAmplitude, RW, &TorquePerformAmplitudeRange, S32Handler, SMTRQPERFAMP)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S32Range, TorquePerformAmplitudeRange, VALIST(0,32767))
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorquePerformAmplitude, S32, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDPERFORMFREQ, u32, SpeedPerformFreq, RW, NULL, U32Handler, SMSPDPERFFRQ)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedPerformFreq, U32, 50)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SPEEDPERFORMAMPLITUDE, s32, SpeedPerformAmplitude, RW, NULL, S32Handler, SMSPDPERFAMP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(SpeedPerformAmplitude, S32, 5000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_POSPERFORMAMPLITUDE, s32, PosPerformAmplitude, RW, NULL, S32Handler, SMPOSPERFAMP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PosPerformAmplitude, S32, 10000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_OUTTERCTRLMODE, u8, OutterCtrlMode, RW, NULL, U8Handler, SMSLMOD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(OutterCtrlMode, U8, 0)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_FEEDBACKWAY, u8, FeedbackWay, RO, NULL, U8Handler, SMTLFBW)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(FeedbackWay, U8, 0)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SVSPEEDCMDFILTER, u16, SVSpeedCmdFilter, RW, &SVSpeedCmdFilterRange, EzCANMotoSVSpeedCmdFilterHandler, SMSVSCFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, SVSpeedCmdFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SVSPEEDCMDOFFSET, s16, SVSpeedCmdOffset, RW, &SVSpeedCmdOffsetRange, S16Handler, SMSVSCOFFSET)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S16Range, SVSpeedCmdOffsetRange, VALIST(-1500,1500))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SVTORQUECMDFILTER, u16, SVTorqueCmdFilter, RW, &SVTorqueCmdFilterRange, EzCANMotoSVTorqueCmdFilterHandler, SMSVTCFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, SVTorqueCmdFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_SVTORQUECMDOFFSET, s16, SVTorqueCmdOffset, RW, &SVTorqueCmdOffsetRange, S16Handler, SMSVTCOFFSET)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(S16Range, SVTorqueCmdOffsetRange, VALIST(-1500,1500))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PWMSPEEDCMDMAX, u32, PWMSpeedCmdMax, RW, NULL, U32Handler, SMPWMSPDMAX)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PWMSpeedCmdMax, U32, 300000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PWMSPEEDCMDFILTER, u16, PWMSpeedCmdFilter, RW, &PWMSpeedCmdFilterRange, EzCANMotoPWMSpeedCmdFilterHandler, SMPWMSPDFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, PWMSpeedCmdFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PWMTORQUECMDMAX, u16, PWMTorqueCmdMax, RW, &PWMTorqueCmdMaxRange, U16Handler, SMPWMTRQMAX)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, PWMTorqueCmdMaxRange, VALIST(0,32767))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PWMTORQUECMDFILTER, u16, PWMTorqueCmdFilter, RW, &PWMTorqueCmdFilterRange, EzCANMotoPWMTorqueCmdFilterHandler, SMPWMTRQFLT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U16Range, PWMTorqueCmdFilterRange, VALIST(0,10000))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEKP, u32, TorqueKp, RW, NULL, EzCANMotoTorquePIHandler, SMTRQKP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueKp, U32, 160000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUEKI, u32, TorqueKi, RW, NULL, EzCANMotoTorquePIHandler, SMTRQKI)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueKi, U32, 4000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MAXCURRENT, u32, MaxCurrent, RW, NULL, U32Handler, SMMAXCUR)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_REFRESHUPLOAD, u8, RefreshUpload, RW, &RefreshUploadRange, EzCANMotoRefreshUploadHandler, SMTRQPERFFRQ)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, RefreshUploadRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MOTORRECOGSWITCH, u8, MotorRecogSwitch, RW, &MotorRecogSwitchRange, U8Handler, SMMRSWT)
#endif
#ifdef EZCAN_SERVO_MOTO_RANGE
EZCAN_SERVO_MOTO_RANGE(U8Range, MotorRecogSwitchRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MOTORMODEL, u32, MotorModel, RW, NULL, U32Handler, SMMTYP)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MOTORFIRM, u16, MotorFirm, RW, NULL, U16Handler, SMMFIRM)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_ENCODERDIR, u8, EncoderDir, RW, NULL, U8Handler, SMMENCDIR)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(EncoderDir, U8, 1)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PHASERESISTANCE, s32, PhaseResistance, RW, NULL, S32Handler, SMPRES)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PhaseResistance, S32, 530)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PHASEINDUCTANCE, s32, PhaseInductance, RW, NULL, S32Handler, SMPINDUC)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PhaseInductance, S32, 1550)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_BEMFCONSTANT, s32, BEMFConstant, RW, NULL, S32Handler, SMBMEFC)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(BEMFConstant, S32, 9300)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_RATEDCURRENT, s32, RatedCurrent, RW, NULL, S32Handler, SMRCURR)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(RatedCurrent, S32, 7000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_RATEDVOLTAGE, s32, RatedVoltage, RW, NULL, S32Handler, SMRVOL)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(RatedVoltage, S32, 36000)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_TORQUECONSTANT, s32, TorqueConstant, RW, NULL, S32Handler, SMTC)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(TorqueConstant, S32, 89)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_MECHANICALTIMECONST, s32, MechanicalTimeConst, RW, NULL, S32Handler, SMMTC)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_HALLEDGEPOSITIVE, u64, HallEdgePositive, RW, NULL, U64Handler, SMHEP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT				 
EZCAN_SERVO_MOTO_INIT(HallEdgePositive, U64, 0x0006030506007878)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_HALLEDGENEGATIVE, u64, HallEdgeNegative, RW, NULL, U64Handler, SMHNP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT				 
EZCAN_SERVO_MOTO_INIT(HallEdgeNegative, U64, 0x0005060305003c3c)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_HALLSTARTUP, u64, HallStartUp, RW, NULL, U64Handler, SMHSUP)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT			
EZCAN_SERVO_MOTO_INIT(HallStartUp, U64, 0x00071e3c2d5a1e0f)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_PEEKCURRENT, s32, PeekCurrent, RW, NULL, S32Handler, SMPKC)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(PeekCurrent, S32, 20500)
#endif

#ifdef EZCAN_SERVO_MOTO_TOK
EZCAN_SERVO_MOTO_TOK(SERVO_MOTO_RATEDSPEED, s32, RatedSpeed, RW, NULL, S32Handler, SMRSPD)
#endif

#ifdef EZCAN_SERVO_MOTO_INIT
EZCAN_SERVO_MOTO_INIT(RatedSpeed, S32, 3000)
#endif

#ifdef EZCAN_SERVO_OTHERS_START_TOK
EZCAN_SERVO_OTHERS_START_TOK(SERVO_OTHERS_CANBAUDATE, 512, u32, CANBaudate, RW, NULL, U32Handler, SMCANBAUD)
#endif

#ifdef EZCAN_SERVO_OTHERS_INIT
EZCAN_SERVO_OTHERS_INIT(CANBaudate, U32, 500000)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_RS232BAUDRATE, u32, RS232Baudrate, RW, NULL, U32Handler, SM232BAUD)
#endif

#ifdef EZCAN_SERVO_OTHERS_INIT
EZCAN_SERVO_OTHERS_INIT(RS232Baudrate, U32, 115200)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_RS485BAUDRATE, u32, RS485Baudrate, RW, NULL, U32Handler, SM232MODE)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_COMMMODE, u16, CommMode, RW, NULL, U16Handler, SMCOMMMODE)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_USRPROPERTY1, u32, USRProperty1, RW, NULL, U32Handler, SMUSRPROP1)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_USRPROPERTY2, u32, USRProperty2, RW, NULL, U32Handler, SMUSRPROP2)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_USRPROPERTY3, u32, USRProperty3, RW, NULL, U32Handler, SMUSRPROP3)
#endif

#ifdef EZCAN_SERVO_OTHERS_TOK
EZCAN_SERVO_OTHERS_TOK(SERVO_OTHERS_USRPROPERTY4, u32, USRProperty4, RW, NULL, U32Handler, SMUSRPROP4)
#endif

#ifdef EZCAN_SERVO_CONTROL_START_TOK
EZCAN_SERVO_CONTROL_START_TOK(SERVO_CONTROL_ENABLE, 768, u8, Enable, RW, &EnableRange, U8Handler, SMEN)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(U8Range, EnableRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(Enable, U8, 1)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_DIR, s8, Dir, RO, &DirRange, S8Handler, SMDIR)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(S8Range, DirRange, VALIST(-1,1))
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(Dir, S8, 1)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_STATE, u8, State, RW, &StateRange, U8Handler, SMSTAT)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(U8Range, StateRange, VALIST(0,6))
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(State, U8, INIT)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_LOOPMODE, u8, LoopMode, RW, &LoopModeRange, EzCANControlLoopModeHandler, SMLOOP)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(U8Range, LoopModeRange, VALIST(0,8))
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(LoopMode, U8, OPEN_LOOP)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_TARGETPOSITION, s64, TargetPosition, RW, NULL, EzCANControlTargetPositionHandler, SMTARPOS)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_TARGETSPEED, s32, TargetSpeed, RW, NULL, EzCANControlTargetSpeedHandler, SMTARSPD)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_TARGETVOLTAGE, S16Params, TargetVoltage, RW, &TargetVoltageRange, EzCANControlTargetVoltageHandler, SMTARVOL)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(S16PARAMSRange, TargetVoltageRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_TARGETCURRENT, S16Params, TargetCurrent, RW, &TargetCurrentRange, EzCANControlTargetCurrentHandler, SMTARCUR)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(S16PARAMSRange, TargetCurrentRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_PERFORMANCESTATE, u16, PerformanceState, RW, NULL, EzCANServoPerformanceStateHandler, SMPERF)
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(PerformanceState, U16, NO_PERF)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_STRSAMPLESYNCONPERFORMSWITCH, u8, StrSampleSyncOnPerformSwitch, RW, NULL, U8Handler, SMSSPERFSWCH)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_CLEARPOSITION, u8, ClearPosition, WO, NULL, EzCANControlClearPositionHandler, SMCLRPOS)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_POSITIONLOCK, u8, PositionLock, WO, NULL, U8Handler, SMPOSLCK)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_GUIDESTEP, u8, GuideStep, RW, NULL, U8Handler, SMGS)
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_ROTORABSORBTIME, U16Params, RotorAbsorbTime, RW, NULL, U16PARAMSHandler, SMRAT)
#endif

#ifdef EZCAN_SERVO_CONTROL_INIT
EZCAN_SERVO_CONTROL_INIT(RotorAbsorbTime, U16PARAMS, PALIST(5,2000))
#endif

#ifdef EZCAN_SERVO_CONTROL_TOK
EZCAN_SERVO_CONTROL_TOK(SERVO_CONTROL_STOPACCPROCESS, u8, StopAccProcess, WO, &StopAccProcessRange, U8Handler, SMSTRTACCP)
#endif
#ifdef EZCAN_SERVO_CONTROL_RANGE
EZCAN_SERVO_CONTROL_RANGE(U8Range, StopAccProcessRange, VALIST(0,1))
#endif

#ifdef EZCAN_SERVO_STATUS_START_TOK
EZCAN_SERVO_STATUS_START_TOK(SERVO_STATUS_ELECTRICANGULAR, 1024, s16, ElectricAngular, RO, &ElectricAngularRange, S16Handler, SMELECANG)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16Range, ElectricAngularRange, VALIST(-180,180))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_TURNSCNT, s32, TurnsCnt, RO, NULL, S32Handler, SMTURNS)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_SPEEDDIFF, s32, SpeedDiff, RO, NULL, S32Handler, SMSPDDIFF)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_RESERVE2, u32, Reserve2, RO, NULL, U32Handler, SMERRHIS)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWCURRAB, S16Params, NowCurrAB, RO, &NowCurrABRange, S16PARAMSHandler, SMNOWCURAB)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowCurrABRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWCURRALFABETA, S16Params, NowCurrAlfaBeta, RO, &NowCurrAlfaBetaRange, S16PARAMSHandler, SMNOWCURALBE)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowCurrAlfaBetaRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWVOLAB, S16Params, NowVolAB, RO, &NowVolABRange, S16PARAMSHandler, SMNOWVOLAB)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowVolABRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWVOLALFABETA, S16Params, NowVolAlfaBeta, RO, &NowVolAlfaBetaRange, S16PARAMSHandler, SMNOWVOLALBE)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowVolAlfaBetaRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_SECTOR, u32, Sector, RO, &SectorRange, U32Handler, SMSECT)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(U32Range, SectorRange, VALIST(0,7))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWPOSITION, s64, NowPosition, RO, NULL, EzCANStatusNowPositionHandler, SMNOWPOS)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWVOLTAGEDQ, S16Params, NowVoltageDQ, RO, &NowVoltageDQRange, EzCANStatusNowVoltageDQHandler, SMNOWVOLDQ)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowVoltageDQRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWCURRENTDQ, S16Params, NowCurrentDQ, RO, &NowCurrentDQRange, EzCANStatusNowCurrentDQHandler, SMNOWCURDQ)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, NowCurrentDQRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWSPEED, s32, NowSpeed, RO, NULL, EzCANStatusNowSpeedHandler, SMNOWSPD)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWHALLSTATUS, u8, NowHallStatus, RO, &NowHallStatusRange, U8Handler, SMNOWHALL)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(U8Range, NowHallStatusRange, VALIST(0,7))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_TOTALVOLTAGE, s32, TotalVoltage, RO, NULL, S32Handler, SMTOTALV)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_TOTALCURRENT, s32, TotalCurrent, RO, NULL, S32Handler, SMTOTALC)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_TEMPERATURE, s32, Temperature, RO, NULL, S32Handler, SMTEMP)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_ELECTRICTRIANGLE, s32, ElectricTriangle, RO, NULL, S32Handler, SMELECTRI)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_INTERNALTARGETPOSITION, s64, InternalTargetPosition, RO, NULL, S64Handler, SMITPOS)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_INTERNALTARGETSPEED, s32, InternalTargetSpeed, RO, NULL, S32Handler, SMITSPD)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_INTERNALTARGETCURRENTDQ, S16Params, InternalTargetCurrentDQ, RO, &InternalTargetCurrentDQRange, S16PARAMSHandler, SMITCURDQ)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, InternalTargetCurrentDQRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_INTERNALTARGETVOLTAGEDQ, S16Params, InternalTargetVoltageDQ, RO, &InternalTargetVoltageDQRange, S16PARAMSHandler, SMITVOLDQ)
#endif
#ifdef EZCAN_SERVO_STATUS_RANGE
EZCAN_SERVO_STATUS_RANGE(S16PARAMSRange, InternalTargetVoltageDQRange, VALIST(0,32767,0,32767))
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_NOWSYSSTATUS, u64, NowSysStatus, RO, NULL, U64Handler, SMSECT)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_POSDIFF, s32, PosDiff, RO, NULL, S32Handler, SMPDIFF)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_OBSERVESPEED, s32, ObserveSpeed, RO, NULL, EzCANStatusNowSpeedHandler, SMOS)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_GUIDESTEPACHIEVE, S16Params, GuideStepAchieve, RO, NULL, S16PARAMSHandler, SMGSA)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_GPSTREGISTER1, u64, GPSTRegister1, RO, NULL, U64Handler, SMGPSTREG1)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_GPSTREGISTER2, u64, GPSTRegister2, RO, NULL, U64Handler, SMGPSTREG2)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_GPSTREGISTER3, u64, GPSTRegister3, RO, NULL, U64Handler, SMGPSTREG3)
#endif

#ifdef EZCAN_SERVO_STATUS_TOK
EZCAN_SERVO_STATUS_TOK(SERVO_STATUS_GPSTREGISTER4, u64, GPSTRegister4, RO, NULL, U64Handler, SMGPSTREG4)
#endif

